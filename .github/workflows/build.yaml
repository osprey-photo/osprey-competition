name: Gradle Build

on: 
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macOS-latest, windows-latest]
        os: [windows-latest]
        java: [ '21' ]
        node: [ '20' ]
      fail-fast: false
    name: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node }}
      uses: actions/setup-node@v4
      with:
        node-version: 20
    - run: npm ci
      working-directory: osprey-competition-ui    
    - run: npm run build
      working-directory: osprey-competition-ui

    - name: Copy
      shell: bash
      run:  |
        rm -rf "./competition/src/main/resources/META-INF/resources/*"
        cp -r ./osprey-competition-ui/dist/* "./competition/src/main/resources/META-INF/resources/"
        ls -lart "./competition/src/main/resources/META-INF/resources/"
           
        if [ "${{ github.ref_name }}" == "main" ]; then
          echo "{\"ver\":\"0.0.0-DEV\"}" > version.json
          echo "--main-jar competition-0.0.0-DEV-runner.jar" > _build/version.cfg
          echo "--app-version 0.0.0" >> _build/version.cfg
        else
          echo "{\"ver\":\"${{ github.ref_name }}\"}" > version.json
          echo "--main-jar competition-${{ github.ref_name }}-runner.jar" > _build/version.cfg
          APPV=${{ github.ref_name }}
          echo "--app-version ${APPV:1} " >> _build/version.cfg
        fi

        cat version.json
        cat _build/version.cfg
        

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Execute build
      run: gradle build "-Dquarkus.package.jar.type=uber-jar"
      working-directory: competition   

    - name: Package Windows
      if: matrix.os == 'windows-latest'
      run: jpackage --verbose "@_build/version.cfg" "@_build/jpackage.cfg" "@_build/jpackage-windows.cfg"      

    - id: upload-installer
      name: Upload installer
      uses: actions/upload-artifact@v4
      with:
        path: ./_build/distributions/*.msi
        name: windows-installer
        retention-days: 7

  release:
    needs: build
    if: startsWith(github.event.ref, 'refs/tags/v')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macOS-latest, windows-latest]
        os: [windows-latest]
        java: [ '21' ]
        node: [ '20' ]
      fail-fast: false
    name: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: ./_build/distributions/
          name: windows-installer 
      - id: publish
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./_build/distributions/*.msi
          asset_name: osprey-competition-windows
          tag: ${{ github.ref }}
          file_glob: true
